% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ibd_identity.R
\name{ibd_identity}
\alias{ibd_identity}
\title{Identity coefficients}
\usage{
ibd_identity(x, ids, verbose = FALSE, checkAnswer = verbose,
  sparse = 50)
}
\arguments{
\item{x}{A pedigree in the form of a \code{\link[pedtools:ped]{pedtools::ped}} object}

\item{ids}{A character (or coercible to character) of length 2, containing ID
labels of two pedigree members}

\item{verbose}{A Logical}

\item{checkAnswer}{If TRUE, and the \code{identity} package is installed, the
result is checked against the output of \code{\link[identity:identity.coefs]{identity::identity.coefs()}}.
(Ignored if any of the founders are inbred.)}

\item{sparse}{A positive integer, indicating the pedigree size limit for
using sparse arrays (as implemented by the
\href{https://CRAN.R-project.org/package=slam}{slam} package) instead of
ordinary arrays.}
}
\value{
A vector of length 9, containing the condensed identity coefficients.
}
\description{
Computes the 9 condensed identity coefficients of a pairwise relationship.
Founders of the pedigree may be inbred; use \code{\link[pedtools:founder_inbreeding]{pedtools::founder_inbreeding()}}
to set this up.
}
\details{
The implementation is a modified version of Karigl's recursive algorithm
(1981).
}
\examples{
library(pedtools)

x = fullSibMating(1)
j1 = ibd_identity(x, ids = 5:6)

stopifnot(all.equal(j1, c(2, 1,4, 1, 4, 1, 7, 10, 2)/32))

# Recalculate the coefficients when individual 1 is 100\% inbred
founder_inbreeding(x, 1) = 1
ibd_identity(x, ids = 5:6)


}
\references{
G. Karigl (1981). \emph{A recursive algorithm for the calculation of
identity coefficients} Annals of Human Genetics, vol. 45.
}
\seealso{
\code{\link[pedtools:ped]{pedtools::ped()}}, \code{\link[pedtools:founder_inbreeding]{pedtools::founder_inbreeding()}}
}
